# This workflow will deploy source code on Cloud Run when a commit is pushed to
# the "main" branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Build (cloudbuild.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Source Developer (roles/run.sourceDeveloper)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources.
#
# 3. Change the values in the "env" block to match your values.

name: Deploy to Cloud Run from Source

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: study-cicd2024 # TODO: update to your Google Cloud project ID
  GAR_NAME: gs-demo # TODO Artifact Registry name
  GAR_LOCATION: asia-southeast2 # TODO Artifact Registry location
  REGION: asia-southeast2 # TODO: update to your region
  SERVICE: 'my-app-flask' # TODO: update to your service name
  
jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: 'ubuntu-latest'  
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Googel Auth
        id: auth
        uses: 'google-github-actions/auth@v3'
        with:
          credentials_json: '$({ secret.GCP_CREDENTIALS )}'

      - name: Docker Auth
        run: |-
          gcloud auth configure-docker "$({ env.GAR_LOCATION})-doker.pkg.dev"


      
      - name: Buil and Push Container
        run: |-
          docker build -t "$({ env.GAR_LOCATION})-doker.pkg.dev/$({ env.PROJECT_ID}):$({ githb.sha})" ./
          docker push "$({ env.GAR_LOCATION})-doker.pkg.dev/$({ env.PROJECT_ID}):$({ githb.sha})"


      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy "${{ env.SERVICE }}" \
            --image "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}:${{ github.sha }}" \
            --region "${{ env.REGION }}" \
            --platform managed \
            --allow-unauthenticated \
            --project "${{ env.PROJECT_ID }}"
